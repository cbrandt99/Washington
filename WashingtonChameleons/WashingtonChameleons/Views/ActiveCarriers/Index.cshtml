@model PaginatedList<WashingtonChameleons.Models.ActiveCarriers>

@{
    ViewData["Title"] = "Active Carriers";
}

<h1>Active Carriers</h1>

<div id="toolbar" class="navbar navbar-light bg-light">
    <form class="form-inline">
        @using (Html.BeginForm())
        {
            <input name="SearchString" class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
            <button class="btn btn-primary my-2 my-sm-0" type="submit">Search</button>
        }
    </form>
</div>
<table class="table table-striped table-sm">
    <thead class="table-dark">
        <tr>
            <th>
                Name
            </th>
            <th>
                Street Address
            </th>
            <th>
                City
            </th>
            <th>
                State
            </th>
            <th>
                Zip Code
            </th>
            <th>
                Phone #
            </th>
            <th>
                Email Addresss
            </th>
            <th>
                Date Added
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LegalName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phystreet)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phycity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phystate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phyzip)
                </td>
                <td class="px-3">
                    @Html.DisplayFor(modelItem => item.Telephone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmailAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AddDate)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.DotNumber">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
Page @Model.PageIndex / @Model.TotalPages
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @nextDisabled">
    Next
</a>